
type UnaryFunction<T, R> = (source: AsyncGenerator<T>) => AsyncGenerator<R>

export function pipe<T, A>(source: AsyncGenerator<T>, fn1: UnaryFunction<T, A>): AsyncGenerator<A>
export function pipe<T, A, B>(source: AsyncGenerator<T>, fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): AsyncGenerator<B>
export function pipe<T, A, B, C>(source: AsyncGenerator<T>, fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): AsyncGenerator<C>
export function pipe<T, A, B, C, D>(source: AsyncGenerator<T>, fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>): AsyncGenerator<D>
export function pipe<T, A, B, C, D, E>(source: AsyncGenerator<T>, fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>): AsyncGenerator<E>
export function pipe<T, A, B, C, D, E, F>(source: AsyncGenerator<T>, fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>): AsyncGenerator<F>
export function pipe<T, A, B, C, D, E, F, G>(source: AsyncGenerator<T>, fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>): AsyncGenerator<G>
export function pipe<T, A, B, C, D, E, F, G, H>(source: AsyncGenerator<T>, fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>): AsyncGenerator<H>
export function pipe<T, A, B, C, D, E, F, G, H, I>(source: AsyncGenerator<T>, fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>): AsyncGenerator<I>
export function pipe<T, A, B, C, D, E, F, G, H, I, J>(source: AsyncGenerator<T>, fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, fn10: UnaryFunction<I, J>): AsyncGenerator<J>
export function pipe<T, A, B, C, D, E, F, G, H, I, J, K>(source: AsyncGenerator<T>, fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, fn10: UnaryFunction<I, J>, fn11: UnaryFunction<J, K>): AsyncGenerator<K>
export function pipe<T, A, B, C, D, E, F, G, H, I, J, K, L>(source: AsyncGenerator<T>, fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, fn10: UnaryFunction<I, J>, fn11: UnaryFunction<J, K>, fn12: UnaryFunction<K, L>): AsyncGenerator<L>
export function pipe<T, A, B, C, D, E, F, G, H, I, J, K, L, M>(source: AsyncGenerator<T>, fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, fn10: UnaryFunction<I, J>, fn11: UnaryFunction<J, K>, fn12: UnaryFunction<K, L>, fn13: UnaryFunction<L, M>): AsyncGenerator<M>
export function pipe<T, A, B, C, D, E, F, G, H, I, J, K, L, M, N>(source: AsyncGenerator<T>, fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, fn10: UnaryFunction<I, J>, fn11: UnaryFunction<J, K>, fn12: UnaryFunction<K, L>, fn13: UnaryFunction<L, M>, fn14: UnaryFunction<M, N>): AsyncGenerator<N>
export function pipe<T, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(source: AsyncGenerator<T>, fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, fn10: UnaryFunction<I, J>, fn11: UnaryFunction<J, K>, fn12: UnaryFunction<K, L>, fn13: UnaryFunction<L, M>, fn14: UnaryFunction<M, N>, fn15: UnaryFunction<N, O>): AsyncGenerator<O>
export function pipe<T, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(source: AsyncGenerator<T>, fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, fn10: UnaryFunction<I, J>, fn11: UnaryFunction<J, K>, fn12: UnaryFunction<K, L>, fn13: UnaryFunction<L, M>, fn14: UnaryFunction<M, N>, fn15: UnaryFunction<N, O>, fn16: UnaryFunction<O, P>): AsyncGenerator<P>
export function pipe<T, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(source: AsyncGenerator<T>, fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, fn10: UnaryFunction<I, J>, fn11: UnaryFunction<J, K>, fn12: UnaryFunction<K, L>, fn13: UnaryFunction<L, M>, fn14: UnaryFunction<M, N>, fn15: UnaryFunction<N, O>, fn16: UnaryFunction<O, P>, fn17: UnaryFunction<P, Q>): AsyncGenerator<Q>
export function pipe<T, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R>(source: AsyncGenerator<T>, fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, fn10: UnaryFunction<I, J>, fn11: UnaryFunction<J, K>, fn12: UnaryFunction<K, L>, fn13: UnaryFunction<L, M>, fn14: UnaryFunction<M, N>, fn15: UnaryFunction<N, O>, fn16: UnaryFunction<O, P>, fn17: UnaryFunction<P, Q>, fn18: UnaryFunction<Q, R>): AsyncGenerator<R>
export function pipe<T, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S>(source: AsyncGenerator<T>, fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, fn10: UnaryFunction<I, J>, fn11: UnaryFunction<J, K>, fn12: UnaryFunction<K, L>, fn13: UnaryFunction<L, M>, fn14: UnaryFunction<M, N>, fn15: UnaryFunction<N, O>, fn16: UnaryFunction<O, P>, fn17: UnaryFunction<P, Q>, fn18: UnaryFunction<Q, R>, fn19: UnaryFunction<R, S>): AsyncGenerator<S>
export async function* pipe(source: AsyncGenerator<any>, ...fns: Array<UnaryFunction<any, any>>) {
    let result = source
    for (const fn of fns) {
        result = fn(result)
    }
    yield* result
}